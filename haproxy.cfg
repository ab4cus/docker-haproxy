global
 # log 127.0.0.1 local0
 # log 127.0.0.1 local1 notice
  ulimit-n        65536
  user haproxy
  group haproxy
  daemon
# chroot /var/lib/haproxy
  pidfile /var/run/haproxy.pid
  daemon
  maxconn 4096
  stats timeout 30s
  stats socket /run/haproxy/admin.sock mode 660 level admin

  # Default SSL material locations
  ca-base /etc/ssl/certs
  crt-base /etc/ssl/private

  # Default ciphers to use on SSL-enabled listening sockets.
  # For more information, see ciphers(1SSL). This list is from:
  #  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
  ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS
  ssl-default-bind-options no-sslv3

defaults
#  log global
  mode http
  balance leastconn
  retries 3

  #Keepalives in HAProxy
#  option httplog
  option http-server-close
  option httpchk GET /health HTTP/1.0\r\nHost:\ app.e4cash.net
  option http-server-close
#  option dontlognull

  # Timeout
  timeout http-keep-alive 3000
  timeout connect 5000ms
  timeout client 50000ms
  timeout server 50000ms
  errorfile 400 /opt/haproxy/errors/400.http
  errorfile 403 /opt/haproxy/errors/403.http
  errorfile 408 /opt/haproxy/errors/408.http
  errorfile 500 /opt/haproxy/errors/500.http
  errorfile 502 /opt/haproxy/errors/502.http
  errorfile 503 /opt/haproxy/errors/503.http
  errorfile 504 /opt/haproxy/errors/504.http

  # Hosts
#  http-request set-header X-Forwarded-For %[src]
#  http-request set-header X-Forwarded-Proto https

  # Session Stickiness, necesitas Set-Cookie: en el codigo del app
#  cookie SRVNAME insert
#  server lamp1 10.0.0.1:80 cookie S1 check
#  server lamp2 10.0.0.2:80 cookie S2 check

  # Pagina administrativa
listen stats # Define a listen section called "stats"
  bind *:90 # Listen on localhost:90
  mode http
  stats enable  # Enable stats page
  stats hide-version  # Hide HAProxy version
  stats realm Haproxy\ Statistics  # Title text for popup window
  stats uri /haproxy_stats  # Stats URI
  stats auth Username:Password  # Authentication credentials

listen admin
    bind *:82
    stats enable

frontend app.e4cash.net-http
  bind *:80
#  log /dev/log local2 info
#  option httplog

  # Only allow HTTPS unless internal
  acl HOST_internal hdr_reg(host) -i ^HAProxy
  redirect scheme https code 301 if !HOST_internal

  default_backend BACKEND_app

#frontend app.e4-cash.net-https
#  bind *:9990 accept-proxy
#  log /dev/log local2 info
#  option httplog
  # Redirect to somewhere else if the domain is different
#  acl HOST_app  hdr(host) -i app-test.e4cash.net
#  redirect location https://www.e4cash.com/ code 301 if !HOST_app

#  default_backend BACKEND-ADM_app

backend BACKEND_app
#  balance roundrobin
#  server app core-priv.e4cash.net:8080 check
  server app core-test.e4cash.net:8080 check

#backend BACKEND_app
  #balance roundrobin
  #server <server1 name> <private IP 1>:80 check
  #server <server2 name> <private IP 2>:80 check
#  server app.core app.core.priv.e4-cash.net:80 check

#backend BACKEND-ADM_app
#  server app.core core-priv.e4cash.net:9990

#frontend http-in
#   bind *:80
#   option forwardfor
#   acl is_site1 hdr_end(host) -i domain1.se
#   acl is_site2 hdr_end(host) -i domain2.com

#   use_backend site1 if is_site1
#   use_backend site2 if is_site2
#   default_backend webservers

#backend webservers
#   balance roundrobin
#   server webserver1 Your-Webserver1-IP:80 check
#   server webserver2 Your-Webserver2-IP:80 check
#   option httpchk

#backend webservers
#   balance roundrobin
#   server webserver1 Your-Webserver1-IP:80
#   server webserver2 Your-Webserver2-IP:80
#   server webserver1 Your-Webserver1-IP:80 check
#   server webserver2 Your-Webserver2-IP:80 check
#   option httpchk

#backend site1
#    balance roundrobin
#    option httpclose
#    option forwardfor
#    server s2 127.0.0.1:49153 maxconn 32

#backend site2
#    balance roundrobin
#    option httpclose
#    option forwardfor
#    server s1 127.0.0.1:2082 maxconn 32
